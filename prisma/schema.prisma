// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId       Int        @id @default(autoincrement()) @map("user_id")
  email        String     @unique
  passwordHash String     @map("password_hash")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  Profile      Profile?
  Token        Token?
  Subject      Subject[]
  TaskType     TaskType[]
  Task         Task[]

  @@map("users")
}

model Profile {
  profileId Int      @id @default(autoincrement()) @map("profile_id")
  user      User     @relation(fields: [userId], references: [userId])
  userId    Int      @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("profiles")
}

model Token {
  tokenId      Int      @id @default(autoincrement()) @map("token_id")
  user         User     @relation(fields: [userId], references: [userId])
  userId       Int      @unique @map("user_id")
  refreshToken String   @unique @map("refresh_token")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

model Subject {
  subjectId Int      @id @default(autoincrement()) @map("subject_id")
  user      User     @relation(fields: [userId], references: [userId])
  userId    Int      @map("user_id")
  title     String
  isHidden  Boolean  @default(false) @map("is_hidden")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Task      Task[]

  @@map("subjects")
}

model TaskType {
  taskTypeId Int      @id @default(autoincrement()) @map("task_type_id")
  user       User     @relation(fields: [userId], references: [userId])
  userId     Int      @map("user_id")
  title      String
  isHidden   Boolean  @default(false) @map("is_hidden")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  Task       Task[]

  @@map("task_types")
}

model Task {
  taskId      Int       @id @default(autoincrement()) @map("task_id")
  user        User      @relation(fields: [userId], references: [userId])
  userId      Int       @map("user_id")
  subject     Subject   @relation(fields: [subjectId], references: [subjectId])
  subjectId   Int       @map("subject_id")
  taskType    TaskType  @relation(fields: [taskTypeId], references: [taskTypeId])
  taskTypeId  Int       @map("task_type_id")
  title       String
  description String
  deadline    DateTime
  isDone      Boolean   @default(false) @map("is_done")
  isHidden    Boolean   @default(false) @map("is_hidden")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  Subtask     Subtask[]

  @@map("tasks")
}

model Subtask {
  subtaskId   Int      @id @default(autoincrement()) @map("subtask_id")
  task        Task     @relation(fields: [taskId], references: [taskId])
  taskId      Int      @map("task_id")
  description String
  isDone      Boolean  @default(false) @map("is_done")
  isHidden    Boolean  @default(false) @map("is_hidden")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("subtasks")
}
